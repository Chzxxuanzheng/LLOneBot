openapi: 3.0.3
info:
  title: OneBot11 事件 API
  description: 基于 LLOneBot 实现的 OneBot11 事件系统 OpenAPI 规范
  version: 1.0.0
  contact:
    name: OneBot11 事件
    url: https://github.com/LLOneBot/LLOneBot

components:
  schemas:
    HeartbeatEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - meta_event_type
        - status
        - interval
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [meta_event]
          description: 事件类型
        meta_event_type:
          type: string
          enum: [heartbeat]
        status:
          type: object
          required:
            - online
            - good
          properties:
            online:
              type: boolean
              nullable: true
              description: 机器人是否在线
            good:
              type: boolean
              description: 机器人状态是否良好
        interval:
          type: integer
          description: 心跳间隔（毫秒）
          example: 5000

    LifeCycleEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - meta_event_type
        - sub_type
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [meta_event]
          description: 事件类型
        meta_event_type:
          type: string
          enum: [lifecycle]
        sub_type:
          type: string
          enum: [enable, disable, connect]
          description: 生命周期事件子类型

    # 请求事件
    FriendRequestEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - request_type
        - user_id
        - comment
        - flag
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [request]
          description: 事件类型
        request_type:
          type: string
          enum: [friend]
        user_id:
          type: integer
          description: 请求者的 QQ 号
        comment:
          type: string
          description: 请求消息
        flag:
          type: string
          description: 请求标识，用于处理请求

    GroupRequestEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - request_type
        - sub_type
        - comment
        - flag
        - group_id
        - user_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [request]
          description: 事件类型
        request_type:
          type: string
          enum: [group]
        sub_type:
          type: string
          enum: [add, invite]
          description: add = 加群请求，invite = 邀请机器人入群
        comment:
          type: string
          description: 请求消息
        flag:
          type: string
          description: 请求标识，用于处理请求
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 用户 ID（add 类型为请求者，invite 类型为邀请者）
        invitor_id:
          type: integer
          description: 邀请者 ID（invite 类型）
          default: 0

    # 通知事件
    FriendAddNoticeEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - user_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [friend_add]
        user_id:
          type: integer
          description: 新好友的 QQ 号

    FriendRecallNoticeEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - user_id
        - message_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [friend_recall]
        user_id:
          type: integer
          description: 撤回消息的好友 QQ 号
        message_id:
          type: integer
          description: 被撤回的消息 ID

    GroupUploadNoticeEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - group_id
        - user_id
        - file
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [group_upload]
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 上传者的 QQ 号
        file:
          $ref: '#/components/schemas/GroupUploadFile'

    GroupUploadFile:
      type: object
      required:
        - id
        - name
        - size
        - busid
      properties:
        id:
          type: string
          description: 文件 ID
        name:
          type: string
          description: 文件名
        size:
          type: integer
          description: 文件大小（字节）
        busid:
          type: integer
          description: 业务 ID

    GroupAdminNoticeEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - sub_type
        - group_id
        - user_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [group_admin]
        sub_type:
          type: string
          enum: [set, unset]
          description: set = 设置管理员，unset = 取消管理员
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 被设置/取消管理员的用户 ID

    GroupDecreaseEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - sub_type
        - group_id
        - user_id
        - operator_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [group_decrease]
        sub_type:
          type: string
          enum: [leave, kick, kick_me]
          description: leave = 主动退群，kick = 被管理员踢出，kick_me = 机器人被踢
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 离开/被踢的用户
        operator_id:
          type: integer
          description: 操作者 ID（执行操作的人）

    GroupIncreaseEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - sub_type
        - group_id
        - user_id
        - operator_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [group_increase]
        sub_type:
          type: string
          enum: [approve, invite]
          description: approve = 同意入群，invite = 邀请入群
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 新成员的 QQ 号
        operator_id:
          type: integer
          description: 操作者 ID（同意/邀请的人）

    GroupBanEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - sub_type
        - group_id
        - user_id
        - operator_id
        - duration
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [group_ban]
        sub_type:
          type: string
          enum: [ban, lift_ban]
          description: ban = 禁言，lift_ban = 解除禁言
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 被禁言/解禁的用户（0 表示全员）
        operator_id:
          type: integer
          description: 执行操作的管理员
        duration:
          type: integer
          description: 禁言时长（秒）（-1 为永久，0 为解禁）

    GroupRecallNoticeEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - group_id
        - user_id
        - operator_id
        - message_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [group_recall]
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 原消息发送者
        operator_id:
          type: integer
          description: 撤回消息的人
        message_id:
          type: integer
          description: 被撤回的消息 ID

    GroupCardEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - group_id
        - user_id
        - card_new
        - card_old
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [group_card]
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 名片被修改的用户
        card_new:
          type: string
          description: 新群名片/昵称
        card_old:
          type: string
          description: 旧群名片/昵称

    PokeEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - sub_type
        - user_id
        - target_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [notify]
        sub_type:
          type: string
          enum: [poke]
        user_id:
          type: integer
          description: 发送戳一戳的用户
        target_id:
          type: integer
          description: 被戳的目标用户
        group_id:
          type: integer
          description: 群号（仅群聊戳一戳存在）
        raw_info:
          description: 原始戳一戳信息

    GroupTitleEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - sub_type
        - group_id
        - user_id
        - title
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [notify]
        sub_type:
          type: string
          enum: [title]
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 获得头衔的用户
        title:
          type: string
          description: 专属头衔

    ProfileLikeEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - sub_type
        - operator_id
        - operator_nick
        - times
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [notify]
        sub_type:
          type: string
          enum: [profile_like]
        operator_id:
          type: integer
          description: 点赞的用户
        operator_nick:
          type: string
          description: 点赞用户的昵称
        times:
          type: integer
          description: 点赞次数

    EssenceEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - group_id
        - user_id
        - sender_id
        - operator_id
        - message_id
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [essence]
        sub_type:
          type: string
          enum: [add, delete]
          default: add
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 消息发送者 ID
        sender_id:
          type: integer
          description: 消息发送者 ID（与 user_id 重复）
        operator_id:
          type: integer
          description: 设置/取消精华的管理员
        message_id:
          type: integer
          description: 被设为精华的消息 ID

    FlashFileEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - sub_type
        - title
        - share_link
        - file_set_id
        - files
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [flash_file]
        sub_type:
          type: string
          enum: [downloaded, downloading, uploaded, uploading]
        title:
          type: string
          description: 闪传文件标题
        share_link:
          type: string
          description: 分享链接
        file_set_id:
          type: string
          description: 文件集 ID
        files:
          type: array
          items:
            $ref: '#/components/schemas/FlashFile'
        # 进度字段（下载/上传时）
        downloaded_size:
          type: integer
          description: 已下载大小（字节）（下载时）
        uploaded_size:
          type: integer
          description: 已上传大小（字节）（上传时）
        total_size:
          type: integer
          description: 总大小（字节）（下载/上传时）
        speed:
          type: integer
          description: 传输速度（字节/秒）（下载/上传时）
        remain_seconds:
          type: integer
          description: 剩余时间（秒）（下载/上传时）

    FlashFile:
      type: object
      required:
        - name
        - size
      properties:
        name:
          type: string
          description: 文件名
        size:
          type: integer
          description: 文件大小（字节）
        path:
          type: string
          description: 本地文件路径（可选）

    GroupMsgEmojiLikeEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - notice_type
        - group_id
        - user_id
        - message_id
        - likes
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [notice]
          description: 事件类型
        notice_type:
          type: string
          enum: [group_msg_emoji_like]
        group_id:
          type: integer
          description: 群号
        user_id:
          type: integer
          description: 点赞消息的用户
        message_id:
          type: integer
          description: 被点赞的消息 ID
        likes:
          type: array
          items:
            $ref: '#/components/schemas/MsgEmojiLike'

    MsgEmojiLike:
      type: object
      required:
        - emoji_id
        - count
      properties:
        emoji_id:
          type: string
          description: 表情 ID
        count:
          type: integer
          description: 该表情的点赞数量

    # 消息事件
    MessageEvent:
      type: object
      required:
        - time
        - self_id
        - post_type
        - message_id
        - message_seq
        - user_id
        - message_type
        - sender
        - message
        - message_format
        - raw_message
        - font
      properties:
        time:
          type: integer
          description: 事件时间戳（Unix 时间戳，秒）
          example: 1640995200
        self_id:
          type: integer
          description: 机器人的 QQ 号
          example: 123456789
        post_type:
          type: string
          enum: [message, message_sent]
          description: 事件类型
        message_id:
          type: integer
          description: 消息 ID（短 ID）
        message_seq:
          type: integer
          description: 消息序列号
        real_id:
          type: integer
          description: 真实消息 ID（仅在 get_msg 接口存在）
        user_id:
          type: integer
          description: 发送者的 QQ 号
        group_id:
          type: integer
          description: 群号（仅群消息）
        message_type:
          type: string
          enum: [private, group]
          description: 消息类型
        sub_type:
          type: string
          enum: [friend, group, normal]
          description: 消息子类型
        sender:
          $ref: '#/components/schemas/MessageSender'
        message:
          oneOf:
            - type: string
              description: 消息内容（字符串格式）
            - type: array
              items:
                $ref: '#/components/schemas/MessageSegment'
              description: 消息内容（消息段数组格式）
        message_format:
          type: string
          enum: [array, string]
          description: 消息格式类型
        raw_message:
          type: string
          description: 原始消息内容（CQ 码格式）
        font:
          type: integer
          description: 字体 ID
          default: 14
        target_id:
          type: integer
          description: 目标 ID（仅发送的消息）
        temp_source:
          type: integer
          enum: [0, 1, 2, 3, 4, 6, 7, 8, 9]
          description: 临时聊天来源（0 = 群聊）

    MessageSender:
      type: object
      required:
        - user_id
        - nickname
      properties:
        user_id:
          type: integer
          description: 发送者的 QQ 号
        nickname:
          type: string
          description: 发送者的昵称
        card:
          type: string
          description: 群名片/昵称（群消息）
        sex:
          type: string
          enum: [male, female, unknown]
          description: 发送者的性别
        age:
          type: integer
          description: 发送者的年龄
        level:
          type: string
          description: 群等级（群消息）
        role:
          type: string
          enum: [owner, admin, member]
          description: 群角色（群消息）
        title:
          type: string
          description: 专属头衔（群消息）
        group_id:
          type: integer
          description: 群号（来自群的临时聊天）

    MessageSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            [
              text,
              image,
              music,
              video,
              record,
              file,
              flash_file,
              at,
              reply,
              json,
              face,
              mface,
              markdown,
              node,
              forward,
              xml,
              poke,
              dice,
              rps,
              contact,
              shake,
              keyboard,
            ]
        data:
          type: object
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextSegment'
          image: '#/components/schemas/ImageSegment'
          music: '#/components/schemas/MusicSegment'
          video: '#/components/schemas/VideoSegment'
          record: '#/components/schemas/RecordSegment'
          file: '#/components/schemas/FileSegment'
          flash_file: '#/components/schemas/FlashFileSegment'
          at: '#/components/schemas/AtSegment'
          reply: '#/components/schemas/ReplySegment'
          json: '#/components/schemas/JsonSegment'
          face: '#/components/schemas/FaceSegment'
          mface: '#/components/schemas/MfaceSegment'
          markdown: '#/components/schemas/MarkdownSegment'
          node: '#/components/schemas/NodeSegment'
          forward: '#/components/schemas/ForwardSegment'
          xml: '#/components/schemas/XmlSegment'
          poke: '#/components/schemas/PokeSegment'
          dice: '#/components/schemas/DiceSegment'
          rps: '#/components/schemas/RpsSegment'
          contact: '#/components/schemas/ContactSegment'
          shake: '#/components/schemas/ShakeSegment'
          keyboard: '#/components/schemas/KeyboardSegment'

    # 消息段类型
    TextSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [text]
        data:
          type: object
          required:
            - text
          properties:
            text:
              type: string
              description: 文本内容

    ImageSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [image]
        data:
          type: object
          required:
            - file
          properties:
            file:
              type: string
              description: 图片文件名或路径
            url:
              type: string
              description: 图片 URL
            file_size:
              type: string
              description: 文件大小（字节）
            summary:
              type: string
              description: 图片摘要
            subType:
              type: integer
              description: 图片子类型
            type:
              type: string
              enum: [flash, show]
              description: 图片显示类型
            thumb:
              type: string
              description: 缩略图 URL
            name:
              type: string
              description: 图片名称

    VideoSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [video]
        data:
          type: object
          required:
            - file
          properties:
            file:
              type: string
              description: 视频文件名
            url:
              type: string
              description: 视频 URL
            path:
              type: string
              description: 本地文件路径
            file_size:
              type: string
              description: 文件大小（字节）
            thumb:
              type: string
              description: 缩略图 URL
            name:
              type: string
              description: 视频名称

    RecordSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [record]
        data:
          type: object
          required:
            - file
          properties:
            file:
              type: string
              description: 音频文件名
            url:
              type: string
              description: 音频 URL
            path:
              type: string
              description: 本地文件路径
            file_size:
              type: string
              description: 文件大小（字节）
            thumb:
              type: string
              description: 缩略图 URL
            name:
              type: string
              description: 音频名称

    FileSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [file]
        data:
          type: object
          required:
            - file
          properties:
            file:
              type: string
              description: 文件名
            url:
              type: string
              description: 文件 URL
            path:
              type: string
              description: 本地文件路径
            file_size:
              type: string
              description: 文件大小（字节）
            file_id:
              type: string
              description: 文件 UUID
            thumb:
              type: string
              description: 缩略图 URL
            name:
              type: string
              description: 文件名

    FlashFileSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [flash_file]
        data:
          type: object
          required:
            - title
            - file_set_id
            - scene_type
          properties:
            title:
              type: string
              description: 闪传文件标题
            file_set_id:
              type: string
              description: 文件集 ID
            scene_type:
              type: integer
              description: 场景类型

    AtSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [at]
        data:
          type: object
          required:
            - qq
          properties:
            qq:
              oneOf:
                - type: string
                  enum: [all]
                - type: string
                  pattern: '^[0-9]+$'
              description: QQ 号或 'all' 表示 @全体成员
            name:
              type: string
              description: 显示名称

    ReplySegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [reply]
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: 要回复的消息 ID

    JsonSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [json]
        data:
          type: object
          required:
            - data
          properties:
            data:
              type: string
              description: JSON 数据（字符串格式）

    XmlSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [xml]
        data:
          type: object
          required:
            - data
          properties:
            data:
              type: string
              description: XML 数据（字符串格式）

    FaceSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [face]
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: 表情 ID

    MfaceSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [mface]
        data:
          type: object
          required:
            - emoji_package_id
            - emoji_id
            - key
          properties:
            emoji_package_id:
              type: integer
              description: 表情包 ID
            emoji_id:
              type: string
              description: 表情 ID
            key:
              type: string
              description: 表情密钥
            summary:
              type: string
              description: 表情摘要/名称
            url:
              type: string
              description: 表情 URL

    MarkdownSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [markdown]
        data:
          type: object
          required:
            - content
          properties:
            content:
              type: string
              description: Markdown 内容

    NodeSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [node]
        data:
          type: object
          properties:
            id:
              oneOf:
                - type: integer
                - type: string
              description: 转发的消息 ID
            content:
              oneOf:
                - type: string
                  description: 消息内容（字符串格式）
                - type: array
                  items:
                    type: object
                    description: 消息段（避免循环引用，使用通用对象）
              description: 消息内容
            user_id:
              type: integer
              description: 用户 ID（OneBot11 格式）
            nickname:
              type: string
              description: 昵称（OneBot11 格式）
            name:
              type: string
              description: 名称（go-cqhttp 格式）
            uin:
              oneOf:
                - type: integer
                - type: string
              description: UIN（go-cqhttp 格式）

    ForwardSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [forward]
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: 转发消息 ID

    MusicSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [music]
        data:
          type: object
          properties:
            type:
              type: string
              enum: [qq, 163, xm, custom]
              description: 音乐平台类型
            id:
              type: string
              description: 音乐 ID（平台音乐）
            url:
              type: string
              description: 音乐 URL（自定义音乐）
            audio:
              type: string
              description: 音频 URL（自定义音乐）
            title:
              type: string
              description: 音乐标题（自定义音乐）
            content:
              type: string
              description: 音乐描述（自定义音乐）
            image:
              type: string
              description: 封面图片 URL（自定义音乐）

    PokeSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [poke]
        data:
          type: object
          properties:
            qq:
              type: integer
              description: 目标 QQ 号
            id:
              type: integer
              description: 戳一戳类型 ID

    DiceSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [dice]
        data:
          type: object
          required:
            - result
          properties:
            result:
              oneOf:
                - type: integer
                - type: string
              description: 骰子结果（1-6）

    RpsSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [rps]
        data:
          type: object
          required:
            - result
          properties:
            result:
              oneOf:
                - type: integer
                - type: string
              description: 猜拳结果（1=石头，2=剪刀，3=布）

    ContactSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [contact]
        data:
          type: object
          required:
            - type
            - id
          properties:
            type:
              type: string
              enum: [qq, group]
              description: 联系人类型
            id:
              type: string
              description: 联系人 ID

    ShakeSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [shake]
        data:
          type: object
          description: 窗口抖动（空对象）

    KeyboardSegment:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum: [keyboard]
        data:
          type: object
          required:
            - rows
          properties:
            rows:
              type: array
              items:
                type: object
                required:
                  - buttons
                properties:
                  buttons:
                    type: array
                    items:
                      $ref: '#/components/schemas/KeyboardButton'

    KeyboardButton:
      type: object
      required:
        - id
        - render_data
        - action
      properties:
        id:
          type: string
          description: 按钮 ID
        render_data:
          type: object
          required:
            - label
            - visited_label
            - style
          properties:
            label:
              type: string
              description: 按钮标签
            visited_label:
              type: string
              description: 点击后的标签
            style:
              type: integer
              description: 按钮样式
        action:
          type: object
          required:
            - type
            - permission
            - unsupport_tips
            - data
            - reply
            - enter
          properties:
            type:
              type: integer
              description: 动作类型
            permission:
              type: object
              required:
                - type
                - specify_role_ids
                - specify_user_ids
              properties:
                type:
                  type: integer
                  description: 权限类型
                specify_role_ids:
                  type: array
                  items:
                    type: string
                  description: 指定角色 ID
                specify_user_ids:
                  type: array
                  items:
                    type: string
                  description: 指定用户 ID
            unsupport_tips:
              type: string
              description: 不支持时的提示
            data:
              type: string
              description: 动作数据
            reply:
              type: boolean
              description: 是否回复
            enter:
              type: boolean
              description: 是否进入

paths: {}
